# Upstream Django API service
upstream api {
    server api:8000;
}

# Upstream React frontend (uncomment when frontend is ready)
# upstream client {
#     server client:3000;
# }

server {
    listen 80;
    client_max_body_size 20M;

    # Redirect root to /admin temporarily (can change to / or /app later)
    location = / {
        return 302 /admin/;
    }

    # Django admin interface
    location /admin/ {
        proxy_pass http://api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Django API endpoints
    location /api/ {
        proxy_pass http://api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Serve static files
    location /staticfiles/ {
        alias /app/staticfiles/;
        expires 30d;
        access_log off;
    }

    # Serve media files
    location /mediafiles/ {
        alias /app/mediafiles/;
        expires 30d;
        access_log off;
    }

    # Optional: WebSocket support (uncomment if needed)
    # location /ws/ {
    #     proxy_pass http://api;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    #     proxy_set_header Host $host;
    #     proxy_cache_bypass $http_upgrade;
    # }

    # Optional: React frontend app (enable when client container is active)
    # location / {
    #     proxy_pass http://client;
    #     proxy_redirect off;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Host $server_name;
    # }
}
